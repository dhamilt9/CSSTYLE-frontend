{"ast":null,"code":"(function () {\n  var OldValue,\n      Transition,\n      Value,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function __extends(child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  OldValue = require('../old-value');\n  Value = require('../value');\n\n  Transition = function (_super) {\n    __extends(Transition, _super);\n\n    function Transition() {\n      return Transition.__super__.constructor.apply(this, arguments);\n    }\n\n    Transition.names = ['flex', 'flex-grow', 'flex-shrink', 'flex-basis'];\n\n    Transition.prototype.prefixed = function (prefix) {\n      return this.all.prefixed(this.name, prefix);\n    };\n\n    Transition.prototype.replace = function (string, prefix) {\n      return string.replace(this.regexp(), '$1' + this.prefixed(prefix) + '$3');\n    };\n\n    Transition.prototype.old = function (prefix) {\n      return new OldValue(this.prefixed(prefix));\n    };\n\n    return Transition;\n  }(Value);\n\n  module.exports = Transition;\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}