{"ast":null,"code":"(function () {\n  var FillAvailable,\n      OldValue,\n      Value,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function __extends(child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  OldValue = require('../old-value');\n  Value = require('../value');\n\n  FillAvailable = function (_super) {\n    __extends(FillAvailable, _super);\n\n    function FillAvailable() {\n      return FillAvailable.__super__.constructor.apply(this, arguments);\n    }\n\n    FillAvailable.names = ['fill-available'];\n\n    FillAvailable.prototype.replace = function (string, prefix) {\n      if (prefix === '-moz-') {\n        return string.replace(this.regexp(), '$1-moz-available$3');\n      } else {\n        return FillAvailable.__super__.replace.apply(this, arguments);\n      }\n    };\n\n    FillAvailable.prototype.old = function (prefix) {\n      if (prefix === '-moz-') {\n        return new OldValue('-moz-available');\n      } else {\n        return FillAvailable.__super__.old.apply(this, arguments);\n      }\n    };\n\n    return FillAvailable;\n  }(Value);\n\n  module.exports = FillAvailable;\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}