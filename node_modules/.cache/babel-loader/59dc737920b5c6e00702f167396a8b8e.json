{"ast":null,"code":"var MapGenerator = require('./map-generator'); // Object with processed CSS\n\n\nvar Result = function () {\n  var DP$0 = Object.defineProperty;\n  \"use strict\";\n\n  function Result(root) {\n    var opts = arguments[1];\n    if (opts === void 0) opts = {};\n    this.root = root;\n    this.opts = opts;\n  }\n\n  Object.defineProperties(Result.prototype, {\n    map: {\n      \"get\": map$get$0,\n      \"configurable\": true,\n      \"enumerable\": true\n    },\n    css: {\n      \"get\": css$get$0,\n      \"configurable\": true,\n      \"enumerable\": true\n    }\n  });\n  DP$0(Result, \"prototype\", {\n    \"configurable\": false,\n    \"enumerable\": false,\n    \"writable\": false\n  }); // Lazy method to return source map\n\n  function map$get$0() {\n    if (!this.cssCached) this.stringify();\n    return this.mapCached;\n  } // Lazy method to return CSS string\n\n\n  function css$get$0() {\n    if (!this.cssCached) this.stringify();\n    return this.cssCached;\n  } // Return CSS string on any try to print\n\n\n  Result.prototype.toString = function () {\n    return this.css;\n  }; // Generate CSS and map\n\n\n  Result.prototype.stringify = function () {\n    var map = new MapGenerator(this.root, this.opts);\n    var generated = map.generate();\n    this.cssCached = generated[0];\n    this.mapCached = generated[1];\n  };\n\n  return Result;\n}();\n\nmodule.exports = Result;","map":null,"metadata":{},"sourceType":"script"}