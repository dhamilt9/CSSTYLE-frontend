{"ast":null,"code":"var Node = require('./node'); // CSS comment between declarations or rules\n\n\nvar Comment = function (super$0) {\n  var DP$0 = Object.defineProperty;\n\n  var MIXIN$0 = function MIXIN$0(t, s) {\n    for (var p in s) {\n      if (s.hasOwnProperty(p)) {\n        DP$0(t, p, Object.getOwnPropertyDescriptor(s, p));\n      }\n    }\n\n    return t;\n  };\n\n  \"use strict\";\n\n  MIXIN$0(Comment, super$0);\n\n  function Comment(defaults) {\n    this.type = 'comment';\n    super$0.call(this, defaults);\n  }\n\n  Comment.prototype = Object.create(super$0.prototype, {\n    \"constructor\": {\n      \"value\": Comment,\n      \"configurable\": true,\n      \"writable\": true\n    }\n  });\n  DP$0(Comment, \"prototype\", {\n    \"configurable\": false,\n    \"enumerable\": false,\n    \"writable\": false\n  }); // Default spaces for new node\n\n  Comment.prototype.defaultStyle = function () {\n    return {\n      left: ' ',\n      right: ' '\n    };\n  }; // Stringify declaration\n\n\n  Comment.prototype.stringify = function (builder) {\n    var style = this.style();\n    if (this.before) builder(this.before);\n    builder('/*' + style.left + this.text + style.right + '*/', this);\n  };\n\n  return Comment;\n}(Node);\n\nmodule.exports = Comment;","map":null,"metadata":{},"sourceType":"script"}