{"ast":null,"code":"(function () {\n  var Declaration,\n      JustifyContent,\n      flexSpec,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function __extends(child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  flexSpec = require('./flex-spec');\n  Declaration = require('../declaration');\n\n  JustifyContent = function (_super) {\n    __extends(JustifyContent, _super);\n\n    function JustifyContent() {\n      return JustifyContent.__super__.constructor.apply(this, arguments);\n    }\n\n    JustifyContent.names = ['justify-content', 'flex-pack', 'box-pack'];\n    JustifyContent.oldValues = {\n      'flex-end': 'end',\n      'flex-start': 'start',\n      'space-between': 'justify',\n      'space-around': 'distribute'\n    };\n\n    JustifyContent.prototype.prefixed = function (prop, prefix) {\n      var spec, _ref;\n\n      _ref = flexSpec(prefix), spec = _ref[0], prefix = _ref[1];\n\n      if (spec === 2009) {\n        return prefix + 'box-pack';\n      } else if (spec === 2012) {\n        return prefix + 'flex-pack';\n      } else {\n        return JustifyContent.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    JustifyContent.prototype.normalize = function (prop) {\n      return 'justify-content';\n    };\n\n    JustifyContent.prototype.set = function (decl, prefix) {\n      var spec, value;\n      spec = flexSpec(prefix)[0];\n\n      if (spec === 2009 || spec === 2012) {\n        value = JustifyContent.oldValues[decl.value] || decl.value;\n        decl.value = value;\n\n        if (spec !== 2009 || value !== 'distribute') {\n          return JustifyContent.__super__.set.call(this, decl, prefix);\n        }\n      } else if (spec === 'final') {\n        return JustifyContent.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return JustifyContent;\n  }(Declaration);\n\n  module.exports = JustifyContent;\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}