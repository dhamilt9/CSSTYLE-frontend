{"ast":null,"code":"(function () {\n  var convert, data, intervals, major, name, names, normalize, _ref;\n\n  names = ['firefox', 'chrome', 'safari', 'ios_saf', 'opera', 'ie', 'bb', 'android'];\n  major = ['firefox', 'chrome', 'safari', 'ios_saf', 'opera', 'android', 'ie', 'ie_mob'];\n\n  normalize = function normalize(array) {\n    return array.reverse().filter(function (i) {\n      return i;\n    });\n  };\n\n  intervals = function intervals(array) {\n    var i, interval, result, splited, sub, _i, _len;\n\n    result = [];\n\n    for (_i = 0, _len = array.length; _i < _len; _i++) {\n      interval = array[_i];\n      splited = interval.split('-');\n      splited = splited.sort().reverse();\n\n      sub = function () {\n        var _j, _len1, _results;\n\n        _results = [];\n\n        for (_j = 0, _len1 = splited.length; _j < _len1; _j++) {\n          i = splited[_j];\n\n          _results.push([i, interval, splited.length]);\n        }\n\n        return _results;\n      }();\n\n      result = result.concat(sub);\n    }\n\n    return result;\n  };\n\n  convert = function convert(name, data) {\n    var future, result, versions;\n    future = normalize(data.versions.slice(-3));\n    versions = intervals(normalize(data.versions.slice(0, -3)));\n    result = {};\n    result.prefix = name === 'opera' ? '-o-' : \"-\" + data.prefix + \"-\";\n\n    if (major.indexOf(name) === -1) {\n      result.minor = true;\n    }\n\n    if (future.length) {\n      result.future = future;\n    }\n\n    result.versions = versions.map(function (i) {\n      return i[0];\n    });\n    result.popularity = versions.map(function (i) {\n      return data.usage_global[i[1]] / i[2];\n    });\n    return result;\n  };\n\n  module.exports = {};\n  _ref = require('caniuse-db/data').agents;\n\n  for (name in _ref) {\n    data = _ref[name];\n    module.exports[name] = convert(name, data);\n  }\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}