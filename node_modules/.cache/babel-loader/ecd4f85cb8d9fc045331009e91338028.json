{"ast":null,"code":"(function () {\n  var Autoprefixer,\n      Browsers,\n      Prefixes,\n      _autoprefixer,\n      infoCache,\n      isPlainObject,\n      postcss,\n      __slice = [].slice,\n      __bind = function __bind(fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  };\n\n  postcss = require('postcss');\n  Browsers = require('./browsers');\n  Prefixes = require('./prefixes');\n  infoCache = null;\n\n  isPlainObject = function isPlainObject(obj) {\n    return Object.prototype.toString.apply(obj) === '[object Object]';\n  };\n\n  _autoprefixer = function autoprefixer() {\n    var browsers, options, prefixes, reqs;\n    reqs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\n    if (reqs.length === 1 && isPlainObject(reqs[0])) {\n      options = reqs[0];\n      reqs = void 0;\n    } else if (reqs.length === 0 || reqs.length === 1 && reqs[0] == null) {\n      reqs = void 0;\n    } else if (reqs.length <= 2 && (reqs[0] instanceof Array || reqs[0] == null)) {\n      options = reqs[1];\n      reqs = reqs[0];\n    } else if (typeof reqs[reqs.length - 1] === 'object') {\n      options = reqs.pop();\n    }\n\n    if (reqs == null) {\n      reqs = _autoprefixer[\"default\"];\n    }\n\n    browsers = new Browsers(_autoprefixer.data.browsers, reqs);\n    prefixes = new Prefixes(_autoprefixer.data.prefixes, browsers, options);\n    return new Autoprefixer(prefixes, _autoprefixer.data);\n  };\n\n  _autoprefixer.data = {\n    browsers: require('../data/browsers'),\n    prefixes: require('../data/prefixes')\n  };\n\n  Autoprefixer = function () {\n    function Autoprefixer(prefixes, data, options) {\n      this.prefixes = prefixes;\n      this.data = data;\n      this.options = options != null ? options : {};\n      this.postcss = __bind(this.postcss, this);\n      this.browsers = this.prefixes.browsers.selected;\n    }\n\n    Autoprefixer.prototype.process = function (str, options) {\n      if (options == null) {\n        options = {};\n      }\n\n      return this.processor().process(str, options);\n    };\n\n    Autoprefixer.prototype.postcss = function (css) {\n      this.prefixes.processor.remove(css);\n      return this.prefixes.processor.add(css);\n    };\n\n    Autoprefixer.prototype.info = function () {\n      infoCache || (infoCache = require('./info'));\n      return infoCache(this.prefixes);\n    };\n\n    Autoprefixer.prototype.processor = function () {\n      return this.processorCache || (this.processorCache = postcss(this.postcss));\n    };\n\n    return Autoprefixer;\n  }();\n\n  _autoprefixer[\"default\"] = ['> 1%', 'last 2 versions', 'Firefox ESR', 'Opera 12.1'];\n\n  _autoprefixer.loadDefault = function () {\n    return this.defaultCache || (this.defaultCache = _autoprefixer(this[\"default\"]));\n  };\n\n  _autoprefixer.process = function (str, options) {\n    if (options == null) {\n      options = {};\n    }\n\n    return this.loadDefault().process(str, options);\n  };\n\n  _autoprefixer.postcss = function (css) {\n    return this.loadDefault().postcss(css);\n  };\n\n  _autoprefixer.info = function () {\n    return this.loadDefault().info();\n  };\n\n  module.exports = _autoprefixer;\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}