{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/mod4/mod4-project/CSSTYLE-frontend/csstyle/src/Components/SnippetView.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'react-materialize';\n\nvar SnippetView = function SnippetView(_ref) {\n  var snippets = _ref.snippets;\n  var div = {\n    height: '100%',\n    width: '100%',\n    background: '#333',\n    border: '5px solid teal',\n    color: 'white',\n    borderRadius: '12px',\n    overflow: 'scroll',\n    margin: 'none'\n  };\n  var container = {\n    height: '100vh',\n    width: '100vw',\n    padding: '5%',\n    background: '#333',\n    border: '2px solid black',\n    color: 'white',\n    borderRadius: '12px',\n    overflow: 'scroll'\n  };\n  var bottomDiv = {\n    width: '80%',\n    hieght: '40%',\n    background: '#333',\n    border: '5px solid teal',\n    color: 'white',\n    borderRadius: '12px',\n    overflow: 'scroll'\n  };\n  return React.createElement(Row, {\n    style: container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: div,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"If no arguments are provided, the constructor creates a JavaScript Date object for the current date and time according to system settings for timezone offset. If at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others. The JavaScript date is based on a time value that is milliseconds since midnight January 1, 1970, UTC. A day holds 86,400,000 milliseconds. The JavaScript Date object range is -100,000,000 days to 100,000,000 days relative to January 1, 1970 UTC. The JavaScript Date object provides uniform behavior across platforms. The time value can be passed between systems to create a date that represents the same moment in time. The JavaScript Date object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed. Invoking JavaScript Date as a function (i.e., without the new operator) will return a string representing the current date and time.\")), React.createElement(Col, {\n    s: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: div,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"If no arguments are provided, the constructor creates a JavaScript Date object for the current date and time according to system settings for timezone offset. If at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others. The JavaScript date is based on a time value that is milliseconds since midnight January 1, 1970, UTC. A day holds 86,400,000 milliseconds. The JavaScript Date object range is -100,000,000 days to 100,000,000 days relative to January 1, 1970 UTC. The JavaScript Date object provides uniform behavior across platforms. The time value can be passed between systems to create a date that represents the same moment in time. The JavaScript Date object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed. Invoking JavaScript Date as a function (i.e., without the new operator) will return a string representing the current date and time.          \"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Col, {\n    s: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: bottomDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"If no arguments are provided, the constructor creates a JavaScript Date object for the current date and time according to system settings for timezone offset. If at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others. The JavaScript date is based on a time value that is milliseconds since midnight January 1, 1970, UTC. A day holds 86,400,000 milliseconds. The JavaScript Date object range is -100,000,000 days to 100,000,000 days relative to January 1, 1970 UTC. The JavaScript Date object provides uniform behavior across platforms. The time value can be passed between systems to create a date that represents the same moment in time. The JavaScript Date object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed. Invoking JavaScript Date as a function (i.e., without the new operator) will return a string representing the current date and time.          \"))));\n};\n\nexport default SnippetView;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/mod4/mod4-project/CSSTYLE-frontend/csstyle/src/Components/SnippetView.js"],"names":["React","Component","Row","Col","SnippetView","snippets","div","height","width","background","border","color","borderRadius","overflow","margin","container","padding","bottomDiv","hieght"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,mBAAzB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAElC,MAAMC,GAAG,GAAG;AACVC,IAAAA,MAAM,EAAE,MADE;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVC,IAAAA,MAAM,EAAE,gBAJE;AAKVC,IAAAA,KAAK,EAAE,OALG;AAMVC,IAAAA,YAAY,EAAE,MANJ;AAOVC,IAAAA,QAAQ,EAAE,QAPA;AAQVC,IAAAA,MAAM,EAAE;AARE,GAAZ;AAWA,MAAMC,SAAS,GAAG;AAChBR,IAAAA,MAAM,EAAE,OADQ;AAEhBC,IAAAA,KAAK,EAAE,OAFS;AAGhBQ,IAAAA,OAAO,EAAE,IAHO;AAIhBP,IAAAA,UAAU,EAAE,MAJI;AAKhBC,IAAAA,MAAM,EAAE,iBALQ;AAMhBC,IAAAA,KAAK,EAAE,OANS;AAOhBC,IAAAA,YAAY,EAAE,MAPE;AAQhBC,IAAAA,QAAQ,EAAE;AARM,GAAlB;AAWA,MAAMI,SAAS,GAAG;AAChBT,IAAAA,KAAK,EAAE,KADS;AAEhBU,IAAAA,MAAM,EAAE,KAFQ;AAGhBT,IAAAA,UAAU,EAAE,MAHI;AAIhBC,IAAAA,MAAM,EAAE,gBAJQ;AAKhBC,IAAAA,KAAK,EAAE,OALS;AAMhBC,IAAAA,YAAY,EAAE,MANE;AAOhBC,IAAAA,QAAQ,EAAE;AAPM,GAAlB;AAUE,SACA,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAET,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,smCADF,CADF,EAWE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEA,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gnCADF,CAXF,CADF,EAsBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEW,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gnCADF,CADF,CAtBF,CADA;AAqCH,CAvED;;AAyEA,eAAeb,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col } from 'react-materialize'\n\n\nconst SnippetView = ({snippets}) => {\n\n  const div = {\n    height: '100%',\n    width: '100%',\n    background: '#333',\n    border: '5px solid teal',\n    color: 'white',\n    borderRadius: '12px',\n    overflow: 'scroll',\n    margin: 'none',\n  }\n\n  const container = {\n    height: '100vh',\n    width: '100vw',\n    padding: '5%',\n    background: '#333',\n    border: '2px solid black',\n    color: 'white',\n    borderRadius: '12px',\n    overflow: 'scroll',\n  }\n\n  const bottomDiv = {\n    width: '80%',\n    hieght: '40%',\n    background: '#333',\n    border: '5px solid teal',\n    color: 'white',\n    borderRadius: '12px',\n    overflow: 'scroll',\n  }\n\n    return (\n    <Row style={container}>\n      <Row>\n        <Col s={6}>\n          <div style={div}>\n          If no arguments are provided, the constructor creates a JavaScript Date object for the current date and time according to system settings for timezone offset.\nIf at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others.\nThe JavaScript date is based on a time value that is milliseconds since midnight January 1, 1970, UTC. A day holds 86,400,000 milliseconds. The JavaScript Date object range is -100,000,000 days to 100,000,000 days relative to January 1, 1970 UTC.\nThe JavaScript Date object provides uniform behavior across platforms. The time value can be passed between systems to create a date that represents the same moment in time.\nThe JavaScript Date object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed.\nInvoking JavaScript Date as a function (i.e., without the new operator) will return a string representing the current date and time.\n          </div>\n        </Col>\n        <Col s={6}>\n          <div style={div}>\n          If no arguments are provided, the constructor creates a JavaScript Date object for the current date and time according to system settings for timezone offset.\n          If at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others.\n          The JavaScript date is based on a time value that is milliseconds since midnight January 1, 1970, UTC. A day holds 86,400,000 milliseconds. The JavaScript Date object range is -100,000,000 days to 100,000,000 days relative to January 1, 1970 UTC.\n          The JavaScript Date object provides uniform behavior across platforms. The time value can be passed between systems to create a date that represents the same moment in time.\n          The JavaScript Date object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed.\n          Invoking JavaScript Date as a function (i.e., without the new operator) will return a string representing the current date and time.          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col s={12}>\n          <div style={bottomDiv}>\n          If no arguments are provided, the constructor creates a JavaScript Date object for the current date and time according to system settings for timezone offset.\n          If at least two arguments are supplied, missing arguments are either set to 1 (if the day is missing) or 0 for all others.\n          The JavaScript date is based on a time value that is milliseconds since midnight January 1, 1970, UTC. A day holds 86,400,000 milliseconds. The JavaScript Date object range is -100,000,000 days to 100,000,000 days relative to January 1, 1970 UTC.\n          The JavaScript Date object provides uniform behavior across platforms. The time value can be passed between systems to create a date that represents the same moment in time.\n          The JavaScript Date object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed.\n          Invoking JavaScript Date as a function (i.e., without the new operator) will return a string representing the current date and time.          </div>\n        </Col>\n      </Row>\n      </Row>\n\n    )\n}\n\nexport default SnippetView;\n"]},"metadata":{},"sourceType":"module"}